// sorting based on start time
class Solution {
public:
    int findLongestChain(vector<vector<int>>& pairs) {
        sort(pairs.begin(), pairs.end());
        int ans = 1;
        vector<int> prev = pairs[0];
        for(int i=1;i<pairs.size();i++){
            vector<int> curr = pairs[i];
            if(prev[1] < curr[0]){
                ans++;
                prev = curr;
            } else {
                if(prev[1] > curr[1]) prev = curr;
            }
        }
        return ans;
    }
};

// sorting based on end time
class Solution {
    static bool comp(const vector<int> &a, vector<int> &b){
        return a[1] < b[1];
    }
public:
    int findLongestChain(vector<vector<int>>& pairs) {
        sort(pairs.begin(), pairs.end(), comp);
        int ans = 1, prev = pairs[0][1];
        for(int i=1;i<pairs.size();i++){
            if(pairs[i][0] > prev){
                ans++;
                prev = pairs[i][1];
            }
        }
        return ans;
    }
};

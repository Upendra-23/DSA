// https://www.geeksforgeeks.org/problems/number-of-distinct-islands/0

class Solution {
    
    bool isvalid(int row,int col,int n,int m){
        return row >= 0 && row < n && col >= 0 && col < m;
    }
    
    void dfs(int row,int col,int sr,int sc,vector<pair<int,int>> &pairs,vector<vector<int>> &vis,
        vector<vector<int>> &grid){
            
        vis[row][col] = true;
        pairs.push_back({row-sr, col-sc});
        
        int dr[] = {-1,0,0,1};
        int dc[] = {0,-1,1,0};
        
        for(int i=0;i<4;i++){
            int nrow = row + dr[i];
            int ncol = col + dc[i];
            if(isvalid(nrow,ncol,grid.size(),grid[0].size()) && !vis[nrow][ncol] && grid[nrow][ncol] == 1)
                dfs(nrow,ncol,sr,sc,pairs,vis,grid);
        }
    }
    
  public:
    int countDistinctIslands(vector<vector<int>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        
        vector<vector<int>> vis(n,vector<int> (m,0));
        set<vector<pair<int,int>>> st;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j] == 1 && !vis[i][j]){
                    vector<pair<int,int>> pairs;
                    dfs(i,j,i,j,pairs,vis,grid);
                    st.insert(pairs);
                }
            }
        }
        
        return st.size();
    }
};

// https://www.geeksforgeeks.org/problems/word-ladder-ii

class Solution {
public:
    vector<vector<string>> findSequences(string beginWord, string endWord, vector<string>& wordList) {
        // code here
        
        unordered_set<string> st(wordList.begin(),wordList.end());
        vector<vector<string>> ans;
        queue<vector<string>> q;
        q.push({beginWord});
        st.erase(beginWord);
        
        int level = 0;
        while(!q.empty()){
            int size = q.size();
            vector<string> visitedWords;
            level++;
            while(size--){
                vector<string> seq = q.front();
                q.pop();
                
                string word = seq[seq.size()-1];
              
                if(word == endWord){
                    if(ans.size() == 0){
                        ans.push_back(seq);
                    }
                    else if(ans[0].size() == seq.size())
                        ans.push_back(seq);
                }
                
                if(ans.size() > 0 && ans[0].size() < seq.size())
                    return ans;
                
                for(int i=0;i<word.size();i++){
                    char originalChar = word[i];
                    for(char ch = 'a'; ch <= 'z'; ch++){
                        word[i] = ch;
                        if(st.find(word) != st.end()){
                            visitedWords.push_back(word);
                            seq.push_back(word);
                            q.push(seq);
                            seq.pop_back();
                        }
                    }
                    word[i] = originalChar;
                }
            }
            for(auto it:visitedWords){
                st.erase(it);
            }
        }
        return ans;
    }
};

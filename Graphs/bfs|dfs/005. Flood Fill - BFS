// https://leetcode.com/problems/flood-fill/

class Solution {
    bool isvalid(int row, int col, int n, int m) {
        return row >= 0 && row < n && col >= 0 && col < m;
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int n = image.size();
        int m = image[0].size();

        if(image[sr][sc] == color) return image;
        int srcColor = image[sr][sc];
        image[sr][sc] = color;
        
        queue<pair<int,int>> q;
        q.push({sr,sc});

        int dr[] = {-1,0,0,1};
        int dc[] = {0,-1,1,0};

        while(!q.empty()){
            int row = q.front().first;
            int col = q.front().second;
            q.pop();

            for(int i=0;i<4;i++){
                int nrow = row + dr[i];
                int ncol = col + dc[i];
                if(isvalid(nrow,ncol,n,m) && image[nrow][ncol] == srcColor){
                    image[nrow][ncol] = color;
                    q.push({nrow,ncol});
                }
            }
        }
        return image;
    }
};

// https://www.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1

class Solution {
    
    bool dfs(int node, vector<int> &vis, vector<int> &pathVis, vector<vector<int>> &adj){
        vis[node] = pathVis[node] = true;
        for(auto it:adj[node]){
            if(!vis[it]){
                if(dfs(it, vis, pathVis, adj))
                    return true;
            }
            else if(pathVis[it])
                return true;
        }
        pathVis[node] = false;
        return false;
    }
    
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(vector<vector<int>> &adj) {
        int n = adj.size();
        vector<int> vis(n,0), pathVis(n,0);
        
        for(int i=0;i<n;i++){
            if(!vis[i]){
                if(dfs(i, vis, pathVis, adj))
                    return true;
            }
        }
        return false;
    }
};

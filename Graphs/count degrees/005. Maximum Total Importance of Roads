class Solution {
public:
    long long maximumImportance(int n, vector<vector<int>>& roads) {
        vector<int> indegree(n,0);
        for(auto it:roads){
            indegree[it[1]]++;
            indegree[it[0]]++;
        }

        priority_queue<pair<int,int>> pq;
        for(int i=0;i<n;i++){
            pq.push({indegree[i],i});
        }

        vector<int> cityvalue(n,0);
        int value = n;
        while(!pq.empty()){
            auto it = pq.top();
            pq.pop();

            int node  = it.second;
            cityvalue[node] = value;
            value--;
        }

        long long ans = 0;
        for(auto it:roads){
            int u = it[0], v = it[1];
            ans = ans + cityvalue[u] + cityvalue[v];
        }
        return ans;
    }
};

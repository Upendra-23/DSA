vector<int> dijkstra(vector<vector<pair<int, int>>> &adj, int src) {
        int n = adj.size();
        vector<int> dist(n,1e9);
        priority_queue<pair<int,int>,vector<pair<int,int>>,
        greater<pair<int,int>>> pq;
        pq.push({0,src});
        dist[src] = 0;
        
        
        while(!pq.empty()){
            int dis = pq.top().first;
            int node = pq.top().second;
            pq.pop();
            
            for(auto it:adj[node]){
                int adjnode = it.first;
                int edgewt = it.second;
                if(dis + edgewt < dist[adjnode]){
                    dist[adjnode] = dis + edgewt;
                    pq.push({dist[adjnode], adjnode});
                }
            }
        }
        
        for(int i=0;i<n;i++){
            if(dist[i] == 1e9)
                dist[i] = -1;
        }
        return dist;
        
    }

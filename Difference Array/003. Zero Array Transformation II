class Solution {
    bool isPOssible(vector<int> &nums, vector<vector<int>> &queries, int k){
        int n = nums.size();
        vector<int> diffArray(n, 0);

        for(int i=0;i<k;i++){
            int si = queries[i][0];
            int ei = queries[i][1];
            int val = queries[i][2];

            diffArray[si] -= val;
            if(ei + 1 < n)
                diffArray[ei+1] += val;
        }

        int sum = 0;
        for(int i=0;i<n;i++){
            sum += diffArray[i];
            diffArray[i] = sum;
        }

        for(int i=0;i<n;i++){
            int finalVal = nums[i] + diffArray[i];
            if(finalVal > 0)
                return false;
        }
        return true;
    }
public:
    int minZeroArray(vector<int>& nums, vector<vector<int>>& queries) {
        int n = queries.size();
        int ans = -1;
        int low = 0, high = n;
        while(low <= high){
            int mid = low+(high-low)/2;
            if(isPOssible(nums, queries, mid)){
                ans = mid;
                high = mid-1;
            }
            else low = mid+1;
        }
        return ans;
    }
};

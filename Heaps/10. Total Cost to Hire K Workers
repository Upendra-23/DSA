class Solution {
public:
    long long totalCost(vector<int>& costs, int k, int candidates) {

        long long ans = 0;
        int i = 0, j = costs.size()-1;

        priority_queue<int,vector<int>,greater<int>> pq1, pq2;

        for(i = 0; i < candidates; i++) pq1.push(costs[i]);
        for(;j>=i && candidates;j--){
            pq2.push(costs[j]);
            candidates--;
        }

        while(k--){
            int cost1 = 1e9, cost2 = 1e9;
            if(pq1.size() > 0) cost1 = pq1.top();
            if(pq2.size() > 0) cost2 = pq2.top();

            if(cost1 <= cost2){
                ans += cost1;
                pq1.pop();
                if(i <= j){
                    pq1.push(costs[i]);
                    i++;
                }
            } else {
                ans += cost2;
                pq2.pop();
                if(j >= i){
                    pq2.push(costs[j]);
                    j--;
                }
            }
        }

        return ans;
    }
};

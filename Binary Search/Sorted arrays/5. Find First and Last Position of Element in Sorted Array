class Solution {
    int getfirstocc(vector<int> &nums,int x){
        int ans = -1;
        int low = 0, high = nums.size()-1;
        while(low <= high){
            int mid = low+(high-low)/2;
            if(nums[mid] == x){
                ans = mid;
                high = mid-1;
            }
            else if(x < nums[mid])
                high = mid-1;
            else
                low = mid+1;
        }
        return ans;
    }
    int getlastocc(vector<int> &nums,int x){
        int ans = -1;
        int low = 0, high = nums.size()-1;
        while(low <= high){
            int mid = low+(high-low)/2;
            if(nums[mid] == x){
                ans = mid;
                low = mid+1;
            }
            else if(x < nums[mid])
                high = mid-1;
            else
                low = mid+1;
        }
        return ans;
    }
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int ans1 = getfirstocc(nums,target);
        int ans2 = getlastocc(nums,target);
        ans.push_back(ans1);
        ans.push_back(ans2);
        return ans;
    }
};

class Solution {
    bool fun(vector<int> &bloomDay,int mid,int m,int k){
        long long cnt = 0, ans = 0;
        for(int i=0;i<bloomDay.size();i++){
            if(mid >= bloomDay[i]) cnt++;
            else{
                ans += (cnt/k);
                cnt = 0;
            }
        }
        ans += (cnt/k);
        return ans >= m;
    }
public:
    int minDays(vector<int>& bloomDay, long long m, long long k) {
        int ans = -1;
        int  n = bloomDay.size();
        if(m*k > n) return ans;
        int low = *min_element(bloomDay.begin(),bloomDay.end());
        int high = *max_element(bloomDay.begin(),bloomDay.end());

        while(low <= high){
            int mid = low+(high-low)/2;
            if(fun(bloomDay, mid, m, k)){
                ans = mid;
                high = mid-1;
            }
            else low = mid+1;
        }
        return ans;
    }
};

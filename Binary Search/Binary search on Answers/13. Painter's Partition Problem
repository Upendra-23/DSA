bool isPossible(vector<int> &boards,int maxAllowed, int k){
    int paintersUsed = 1;
    int currentTime = 0;
    for(int i=0;i<boards.size();i++){
        if(currentTime + boards[i] <= maxAllowed) currentTime += boards[i];
        else{
            paintersUsed++;
            currentTime = boards[i];
            if(paintersUsed > k) return false;
        }
    }
    return true;
}
int findLargestMinDistance(vector<int> &boards, int k)
{
    int low =  *max_element(boards.begin(),boards.end());
    int high = accumulate(boards.begin(),boards.end(),0);

    int ans = high;
    while(low <= high){
        int mid = low+(high-low)/2;
        if(isPossible(boards, mid, k)){
            ans = mid;
            high = mid-1;
        }
        else low = mid+1;
    } 
    return ans;
}

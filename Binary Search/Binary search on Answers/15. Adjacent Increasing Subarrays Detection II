class Solution {
    bool hasIncreasingSubarrays(vector<int>& nums, int k) {
        int n = nums.size();
        int prevcnt = 0, currcnt = 1;
        for(int i=1;i<n;i++){
            if(nums[i] > nums[i-1]){
                currcnt++;
                if((currcnt/k) >= 2) 
                    return true;
            }
            else{
                if(min(prevcnt, currcnt) >= k) return true;
                prevcnt = currcnt;
                currcnt = 1;
            }
        }
        return min(prevcnt, currcnt) >= k ? true : false;
    }
public:
    int maxIncreasingSubarrays(vector<int>& nums) {
        int n = nums.size();
        int ans = 0;
        int low = 1, high = n/2;
        while(low <= high){
            int mid = low+(high-low)/2;
            if(hasIncreasingSubarrays(nums, mid)){
                ans = mid;
                low = mid+1;
            }
            else high = mid-1;
        }
        return ans;
    }
};

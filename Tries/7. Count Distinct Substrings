#include<bits/stdc++.h>

struct Node {
    Node* links[26];
    bool contains(char ch){
        return links[ch-'a'] != NULL; 
    }
    void put(char ch){
        links[ch-'a'] = new Node();
    }
    Node* get(char ch){
        return links[ch-'a'];
    }
};

class Trie{
    Node* root;
public:
    Trie(){
        root = new Node();
    }

    int cntsubstr(string &word){
        int cnt = 0;
        for(int i=0;i<word.size();i++){
            Node* node = root;
            for(int j=i;j<word.size();j++){
                if(!node->contains(word[j])){
                    node->put(word[j]);
                    cnt++;
                }
                node = node->get(word[j]);
            }
        }
        return cnt+1;
    }
};

int countDistinctSubstrings(string &s)
{
    //    Write your code here.
    Trie obj;
    return obj.cntsubstr(s);
}

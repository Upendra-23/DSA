class Solution {
public:
    vector<vector<int>> intervalIntersection(vector<vector<int>>& firstList, vector<vector<int>>& secondList) {
        map<int,int> mp;
        for(int i=0;i<firstList.size();i++){
            mp[firstList[i][0]]++;
            mp[firstList[i][1]]--;
        }

        for(int i=0;i<secondList.size();i++){
            mp[secondList[i][0]]++;
            mp[secondList[i][1]]--;
        }

        vector<vector<int>> ans;
        int olcnt = 0, start = -1;
        for(auto &it: mp) {
            olcnt += it.second;
            if(it.second == 0) {
                ans.push_back({it.first, it.first});
            }
            else if(olcnt == 2) start = it.first;
            else if(start != -1) {
                ans.push_back({start, it.first});
                start = -1;
            }
        }
        return ans;
    }

};

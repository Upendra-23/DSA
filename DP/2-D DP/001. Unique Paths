class Solution {
    int fun(int i,int j, vector<vector<int>> &dp){
        if(i < 0 || j < 0) return 0;
        if(i == 0 && j == 0) return 1;
        if(dp[i][j] != -1) return dp[i][j];
        int u = fun(i-1,j,dp);
        int l = fun(i,j-1,dp);
        return dp[i][j] = u + l;
    }
public:
    int uniquePaths(int n, int m) {
        vector<vector<int>> dp(n+1, vector<int> (m+1,0));
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(i == 1 && j == 1){
                    dp[i][j] = 1;
                    continue;
                }
                int u = dp[i-1][j];
                int l = dp[i][j-1];
                dp[i][j] = u + l;
            }
        }
        return dp[n][m];
    }
};

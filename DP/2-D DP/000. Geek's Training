class Solution {
    int fun(int day,int last,vector<vector<int>> &arr,vector<vector<int>> &dp){
        if(day == 0){
            int maxi = -1e9;
            for(int task=0;task<3;task++){
                if(task != last)
                    maxi = max(maxi, arr[day][task]);
            }
            return maxi;
        }
        if(dp[day][last] != -1) return dp[day][last];
        int ans = -1e9;
        for(int task=0;task<3;task++){
            if(task != last){
                int res = arr[day][task] + fun(day-1,task,arr,dp);
                ans = max(ans, res);
            }
        }
        return dp[day][last] = ans;
    }
  public:
    int maximumPoints(vector<vector<int>>& arr) {
        int n = arr.size();
        vector<vector<int>> dp(n, vector<int> (4,0));
        
        dp[0][0] = max(arr[0][1], arr[0][2]);
        dp[0][1] = max(arr[0][0], arr[0][2]);
        dp[0][2] = max(arr[0][0], arr[0][1]);
        dp[0][3] = max({arr[0][0], arr[0][1], arr[0][2]});
        
        for(int day=1;day<n;day++){
            for(int last=0;last<4;last++){
                int maxi = -1e9;
                for(int task=0;task<3;task++){
                    if(task != last){
                        int res = arr[day][task] + dp[day-1][task];
                        maxi = max(maxi, res);
                    }
                }
                dp[day][last] = maxi;
            }
        }
        return dp[n-1][3];
    }
};

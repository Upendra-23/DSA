int longestBitonicSubsequence(vector<int>& arr, int n)
{
    vector<int> dp1(n, 1), dp2(n, 1);

    for(int curr=0;curr<n;curr++){
        for(int prev=0;prev<curr;prev++){
            if(arr[curr] > arr[prev] && 1+dp1[prev] > dp1[curr])
                dp1[curr] = 1 + dp1[prev];
        }
    }

    for(int curr=n-1;curr>=0;curr--){
        for(int prev=n-1;prev>curr;prev--){
            if(arr[curr] > arr[prev] && 1+dp2[prev] > dp2[curr])
                dp2[curr] = 1 + dp2[prev];
        }
    }

    int ans = 0;
    for(int i=0;i<n;i++)
        ans = max(ans, dp1[i] + dp2[i] - 1);
    return ans;
}

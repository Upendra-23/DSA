class Solution {
    int fun(int ind,int prev,vector<int> &nums,vector<vector<int>> &dp){
        if(ind == nums.size()) return 0;
        if(dp[ind][prev+1] != -1) return dp[ind][prev+1];
        int notpick = fun(ind+1, prev, nums, dp);
        int pick = 0;
        if(prev == -1 || nums[ind] > nums[prev])
            pick = 1+fun(ind+1, ind, nums, dp);
        return dp[ind][prev+1] = max(pick, notpick);
    }
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();

        int ans = 1;
        vector<int> dp(n, 1);
        for(int ind=0;ind<n;ind++){
            for(int prev=0;prev<ind;prev++){
                if(nums[ind] > nums[prev] && 1 + dp[prev] > dp[ind]){
                    dp[ind] = 1 + dp[prev];
                }
            }
            ans = max(ans, dp[ind]);
        }
        return ans;
    }
};

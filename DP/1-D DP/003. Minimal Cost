class Solution {
    int fun(int ind,int k,vector<int> &arr,vector<int> &dp){
        if(ind == 0) return 0;
        if(dp[ind] != -1) return dp[ind];
        int ans = 1e9;
        for(int i=1;i<=k;i++){
            if(ind-i >= 0)
                ans = min(ans, abs(arr[ind]-arr[ind-i]) + fun(ind-i,k,arr,dp));
        }
        return dp[ind] = ans;
    }
  public:
    int minimizeCost(int k, vector<int>& arr) {
        int n = arr.size();
        vector<int> dp(n, 0);
        
        for(int ind=1;ind<n;ind++){
            int ans = 1e9;
            for(int i=1;i<=k;i++){
                if(ind-i >= 0)
                    ans = min(ans, abs(arr[ind]-arr[ind-i]) + dp[ind-i]);
            }
            dp[ind] = ans;
        }
        return dp[n-1];
    }
};

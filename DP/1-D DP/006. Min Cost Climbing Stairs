class Solution {
    int fun(int ind, vector<int> &cost,vector<int> &dp){
        if(ind >= cost.size()) return 0;
        if(dp[ind] != -1) return dp[ind];
        int jump1 = cost[ind] + fun(ind+1, cost, dp);
        int jump2 = cost[ind] + fun(ind+2, cost, dp);
        return dp[ind] = min(jump1, jump2); 
    }
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int n = cost.size(); 
        vector<int> dp(n, 0);
        dp[0] = cost[0];
        dp[1] = cost[1];
        for(int i=2;i<n;i++)
            dp[i] = cost[i] + min(dp[i-1], dp[i-2]);
        return min(dp[n-1],dp[n-2]);
    }
};

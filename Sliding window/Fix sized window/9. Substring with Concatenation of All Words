class Solution {
    bool fun(string &s,unordered_map<string,int> mp,int len){
        for(int i=0;i<s.size();i+=len){
            string str = s.substr(i,len);
            mp[str]--;
            if(mp[str] < 0)
                return false;
        }
        return true;
    }
public:
    vector<int> findSubstring(string s, vector<string>& words) {
        vector<int> ans;
        unordered_map<string,int> mp;
        for(auto it:words) mp[it]++;
        int strlen = words[0].size();
        int k = words.size() * strlen;
        int i = 0;
        while(i + k <= s.size()){
            string str = s.substr(i,k);
            if(fun(str,mp,strlen))
                ans.push_back(i);
            i++;
        }
        return ans;
    }
};

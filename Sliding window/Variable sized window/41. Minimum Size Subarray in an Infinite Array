class Solution {
public:
    int minSizeSubarray(vector<int>& nums, int target) {
        int n = nums.size();
        long long totalSum = 0;
        for(auto it:nums) totalSum += it;

        if(target % totalSum == 0){
            return (target/totalSum) * n;
        }
        
        int arrCnt = target / totalSum;
        int rem = target % totalSum;

        int ans = 1e9, sum = 0;
        int i = 0, j = 0;
        while(i < n){
            sum += nums[j%n];
            while(sum > rem){
                sum -= nums[i%n];
                i++;
            }
            if(sum == rem) ans = min(ans, j-i+1);
            j++;
        }

        if(ans == 1e9) return -1;
        return ans + (arrCnt * n);
    }
};
